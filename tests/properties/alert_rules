### For updating these rules, see: https://awesome-prometheus-alerts.grep.to/rules

### BEGIN - Prometheus self-monitoring ###
prometheus_rules:
  - name: prometheus_rules
    rules:
      - alert: PrometheusJobMissing
        expr: absent(up{job="prometheus"})
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Prometheus job missing (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}A Prometheus job has disappeared\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusTargetMissing
        expr: up == 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Prometheus target missing (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}A Prometheus target has disappeared. An exporter might be crashed.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusAllTargetsMissing
        expr: count by (job) (up) == 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Prometheus all targets missing (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}A Prometheus job does not have living target anymore.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusConfigurationReloadFailure
        expr: prometheus_config_last_reload_successful != 1
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Prometheus configuration reload failure (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Prometheus configuration reload error\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusTooManyRestarts
        expr: changes(process_start_time_seconds{job=~"prometheus|pushgateway|alertmanager"}[15m]) > 2
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Prometheus too many restarts (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Prometheus has restarted more than twice in the last 15 minutes. It might be crashlooping.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusAlertmanagerConfigurationReloadFailure
        expr: alertmanager_config_last_reload_successful != 1
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Prometheus AlertManager configuration reload failure (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}AlertManager configuration reload error\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusAlertmanagerConfigNotSynced
        expr: count(count_values("config_hash", alertmanager_config_hash)) > 1
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Prometheus AlertManager config not synced (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Configurations of AlertManager cluster instances are out of sync\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusAlertmanagerE2eDeadManSwitch
        expr: vector(1)
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Prometheus AlertManager E2E dead man switch (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Prometheus DeadManSwitch is an always-firing alert. It's used as an end-to-end test of Prometheus through the Alertmanager.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusNotConnectedToAlertmanager
        expr: prometheus_notifications_alertmanagers_discovered < 1
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Prometheus not connected to alertmanager (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Prometheus cannot connect the alertmanager\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusRuleEvaluationFailures
        expr: increase(prometheus_rule_evaluation_failures_total[3m]) > 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Prometheus rule evaluation failures (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Prometheus encountered {{ $value }} rule evaluation failures, leading to potentially ignored alerts.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusTemplateTextExpansionFailures
        expr: increase(prometheus_template_text_expansion_failures_total[3m]) > 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Prometheus template text expansion failures (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Prometheus encountered {{ $value }} template text expansion failures\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusRuleEvaluationSlow
        expr: prometheus_rule_group_last_duration_seconds > prometheus_rule_group_interval_seconds
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Prometheus rule evaluation slow (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Prometheus rule evaluation took more time than the scheduled interval. It indicates a slower storage backend access or too complex query.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusNotificationsBacklog
        expr: min_over_time(prometheus_notifications_queue_length[10m]) > 0
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Prometheus notifications backlog (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}The Prometheus notification queue has not been empty for 10 minutes\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusAlertmanagerNotificationFailing
        expr: rate(alertmanager_notifications_failed_total[1m]) > 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Prometheus AlertManager notification failing (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Alertmanager is failing sending notifications\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusTargetEmpty
        expr: prometheus_sd_discovered_targets == 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Prometheus target empty (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Prometheus has no target in service discovery\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusTargetScrapingSlow
        expr: prometheus_target_interval_length_seconds{quantile="0.9"} > 60
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Prometheus target scraping slow (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Prometheus is scraping exporters slowly\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusLargeScrape
        expr: increase(prometheus_target_scrapes_exceeded_sample_limit_total[10m]) > 10
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Prometheus large scrape (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Prometheus has many scrapes that exceed the sample limit\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusTargetScrapeDuplicate
        expr: increase(prometheus_target_scrapes_sample_duplicate_timestamp_total[5m]) > 0
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Prometheus target scrape duplicate (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Prometheus has many samples rejected due to duplicate timestamps but different values\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusTsdbCheckpointCreationFailures
        expr: increase(prometheus_tsdb_checkpoint_creations_failed_total[1m]) > 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Prometheus TSDB checkpoint creation failures (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Prometheus encountered {{ $value }} checkpoint creation failures\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusTsdbCheckpointDeletionFailures
        expr: increase(prometheus_tsdb_checkpoint_deletions_failed_total[1m]) > 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Prometheus TSDB checkpoint deletion failures (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Prometheus encountered {{ $value }} checkpoint deletion failures\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusTsdbCompactionsFailed
        expr: increase(prometheus_tsdb_compactions_failed_total[1m]) > 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Prometheus TSDB compactions failed (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Prometheus encountered {{ $value }} TSDB compactions failures\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusTsdbHeadTruncationsFailed
        expr: increase(prometheus_tsdb_head_truncations_failed_total[1m]) > 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Prometheus TSDB head truncations failed (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Prometheus encountered {{ $value }} TSDB head truncation failures\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusTsdbReloadFailures
        expr: increase(prometheus_tsdb_reloads_failures_total[1m]) > 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Prometheus TSDB reload failures (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Prometheus encountered {{ $value }} TSDB reload failures\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusTsdbWalCorruptions
        expr: increase(prometheus_tsdb_wal_corruptions_total[1m]) > 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Prometheus TSDB WAL corruptions (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Prometheus encountered {{ $value }} TSDB WAL corruptions\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"

      - alert: PrometheusTsdbWalTruncationsFailed
        expr: increase(prometheus_tsdb_wal_truncations_failed_total[1m]) > 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Prometheus TSDB WAL truncations failed (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Prometheus encountered {{ $value }} TSDB WAL truncation failures\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ prometheus_pic }}"
### END - Prometheus self-monitoring ###

### BEGIN - Host and hardware (node-exporter) ###
node_rules:
  - name: node_rules
    rules:
      - alert: HostDown
        expr: up{job="node_exporter"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Host {{ $labels.instance }} down{% endraw %}"
          description: "{% raw %}Failed to scrape {{ $labels.job }} on {{ $labels.instance }} for more than 1 minutes. Host seems down.\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostOutOfMemory
        expr: node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 < 10
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host out of memory (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Node memory is filling up (< 10% left)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostMemoryUnderMemoryPressure
        expr: rate(node_vmstat_pgmajfault[1m]) > 1000
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host memory under memory pressure (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}The node is under heavy memory pressure. High rate of major page faults\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostUnusualNetworkThroughputIn
        expr: sum by (instance) (rate(node_network_receive_bytes_total[2m])) / 1024 / 1024 > 100
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host unusual network throughput in (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Host network interfaces are probably receiving too much data (> 100 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostUnusualNetworkThroughputOut
        expr: sum by (instance) (rate(node_network_transmit_bytes_total[2m])) / 1024 / 1024 > 100
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host unusual network throughput out (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Host network interfaces are probably sending too much data (> 100 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostUnusualDiskReadRate
        expr: sum by (instance) (rate(node_disk_read_bytes_total[2m])) / 1024 / 1024 > 50
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host unusual disk read rate (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Disk is probably reading too much data (> 50 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostUnusualDiskWriteRate
        expr: sum by (instance) (rate(node_disk_written_bytes_total[2m])) / 1024 / 1024 > 50
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host unusual disk write rate (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Disk is probably writing too much data (> 50 MB/s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      # Please add ignored mountpoints in node_exporter parameters like
      # "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|run)($|/)".
      # Same rule using "node_filesystem_free_bytes" will fire when disk fills for non-root users.
      - alert: HostOutOfDiskSpace
        expr: (node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes < 10 and ON (instance, device, mountpoint) node_filesystem_readonly == 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host out of disk space (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Disk is almost full (< 10% left)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      # Please add ignored mountpoints in node_exporter parameters like
      # "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|run)($|/)".
      # Same rule using "node_filesystem_free_bytes" will fire when disk fills for non-root users.
      - alert: HostDiskWillFillIn24Hours
        expr: (node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes < 10 and ON (instance, device, mountpoint) predict_linear(node_filesystem_avail_bytes{fstype!~"tmpfs"}[1h], 24 * 3600) < 0 and ON (instance, device, mountpoint) node_filesystem_readonly == 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host disk will fill in 24 hours (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Filesystem is predicted to run out of space within the next 24 hours at current write rate\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostOutOfInodes
        expr: node_filesystem_files_free{mountpoint ="/rootfs"} / node_filesystem_files{mountpoint="/rootfs"} * 100 < 10 and ON (instance, device, mountpoint) node_filesystem_readonly{mountpoint="/rootfs"} == 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host out of inodes (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Disk is almost running out of available inodes (< 10% left)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostInodesWillFillIn24Hours
        expr: node_filesystem_files_free{mountpoint ="/rootfs"} / node_filesystem_files{mountpoint="/rootfs"} * 100 < 10 and predict_linear(node_filesystem_files_free{mountpoint="/rootfs"}[1h], 24 * 3600) < 0 and ON (instance, device, mountpoint) node_filesystem_readonly{mountpoint="/rootfs"} == 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host inodes will fill in 24 hours (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Filesystem is predicted to run out of inodes within the next 24 hours at current write rate\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostUnusualDiskReadLatency
        expr: rate(node_disk_read_time_seconds_total[1m]) / rate(node_disk_reads_completed_total[1m]) > 0.1 and rate(node_disk_reads_completed_total[1m]) > 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host unusual disk read latency (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Disk latency is growing (read operations > 100ms)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostUnusualDiskWriteLatency
        expr: rate(node_disk_write_time_seconds_total[1m]) / rate(node_disk_writes_completed_total[1m]) > 0.1 and rate(node_disk_writes_completed_total[1m]) > 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host unusual disk write latency (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Disk latency is growing (write operations > 100ms)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostHighCpuLoad
        expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[2m])) * 100) > 80
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host high CPU load (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}CPU load is > 80%\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostCpuStealNoisyNeighbor
        expr: avg by(instance) (rate(node_cpu_seconds_total{mode="steal"}[5m])) * 100 > 10
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host CPU steal noisy neighbor (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}CPU steal is > 10%. A noisy neighbor is killing VM performances or a spot instance may be out of credit.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      # 1000 context switches is an arbitrary number.
      # Alert threshold depends on nature of application.
      # Please read: https://github.com/samber/awesome-prometheus-alerts/issues/58
      - alert: HostContextSwitching
        expr: (rate(node_context_switches_total[5m])) / (count without(cpu, mode) (node_cpu_seconds_total{mode="idle"})) > 1000
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host context switching (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Context switching is growing on node (> 1000 / s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostSwapIsFillingUp
        expr: (1 - (node_memory_SwapFree_bytes / node_memory_SwapTotal_bytes)) * 100 > 80
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host swap is filling up (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Swap is filling up (>80%)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostSystemdServiceCrashed
        expr: node_systemd_unit_state{state="failed"} == 1
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host systemd service crashed (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}systemd service crashed\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostPhysicalComponentTooHot
        expr: node_hwmon_temp_celsius > 75
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host physical component too hot (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Physical hardware component too hot\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostNodeOvertemperatureAlarm
        expr: node_hwmon_temp_crit_alarm_celsius == 1
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Host node overtemperature alarm (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Physical node temperature alarm triggered\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostRaidArrayGotInactive
        expr: node_md_state{state="inactive"} > 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Host RAID array got inactive (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}RAID array {{ $labels.device }} is in degraded state due to one or more disks failures. Number of spare drives is insufficient to fix issue automatically.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostRaidDiskFailure
        expr: node_md_disks{state="failed"} > 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host RAID disk failure (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}At least one device in RAID array on {{ $labels.instance }} failed. Array {{ $labels.md_device }} needs attention and possibly a disk swap\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostKernelVersionDeviations
        expr: count(sum(label_replace(node_uname_info, "kernel", "$1", "release", "([0-9]+.[0-9]+.[0-9]+).*")) by (kernel)) > 1
        for: 6h
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host kernel version deviations (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Different kernel versions are running\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostOomKillDetected
        expr: increase(node_vmstat_oom_kill[1m]) > 0
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host OOM kill detected (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}OOM kill detected\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostEdacCorrectableErrorsDetected
        expr: increase(node_edac_correctable_errors_total[1m]) > 0
        for: 0m
        labels:
          severity: info
        annotations:
          summary: "{% raw %}Host EDAC Correctable Errors detected (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Host {{ $labels.instance }} has had {{ printf \"%.0f\" $value }} correctable memory errors reported by EDAC in the last 5 minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostEdacUncorrectableErrorsDetected
        expr: node_edac_uncorrectable_errors_total > 0
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host EDAC Uncorrectable Errors detected (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Host {{ $labels.instance }} has had {{ printf \"%.0f\" $value }} uncorrectable memory errors reported by EDAC in the last 5 minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostNetworkReceiveErrors
        expr: rate(node_network_receive_errs_total[2m]) / rate(node_network_receive_packets_total[2m]) > 0.01
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host Network Receive Errors (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Host {{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} receive errors in the last two minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostNetworkTransmitErrors
        expr: rate(node_network_transmit_errs_total[2m]) / rate(node_network_transmit_packets_total[2m]) > 0.01
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host Network Transmit Errors (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Host {{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} transmit errors in the last two minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostNetworkInterfaceSaturated
        expr: (rate(node_network_receive_bytes_total{device!~"^tap.*"}[1m]) + rate(node_network_transmit_bytes_total{device!~"^tap.*"}[1m])) / node_network_speed_bytes{device!~"^tap.*"} > 0.8 < 10000
        for: 1m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host Network Interface Saturated (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}The network interface \"{{ $labels.device }}\" on \"{{ $labels.instance }}\" is getting overloaded.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostNetworkBondDegraded
        expr: (node_bonding_active - node_bonding_slaves) != 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host Network Bond Degraded (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Bond \"{{ $labels.device }}\" degraded on \"{{ $labels.instance }}\".\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostConntrackLimit
        expr: node_nf_conntrack_entries / node_nf_conntrack_entries_limit > 0.8
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host conntrack limit (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}The number of conntrack is approaching limit\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostClockSkew
        expr: (node_timex_offset_seconds > 0.05 and deriv(node_timex_offset_seconds[5m]) >= 0) or (node_timex_offset_seconds < -0.05 and deriv(node_timex_offset_seconds[5m]) <= 0)
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host clock skew (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Clock skew detected. Clock is out of sync. Ensure NTP is configured correctly on this host.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostClockNotSynchronising
        expr: min_over_time(node_timex_sync_status[1m]) == 0 and node_timex_maxerror_seconds >= 16
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Host clock not synchronising (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Clock not synchronising. Ensure NTP is configured on this host.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"

      - alert: HostRequiresReboot
        expr: node_reboot_required > 0
        for: 4h
        labels:
          severity: info
        annotations:
          summary: "{% raw %}Host requires reboot (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}{{ $labels.instance }} requires a reboot.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ node_pic }}"
### END - Host and hardware (node-exporter) ###

### BEGIN MariaDB (prometheus/mysqld_exporter) ###
mysql_rules:
  - name: mysql_rules
    rules:
      - alert: MysqlDown
        expr: mysql_up == 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}MySQL down (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}MySQL instance is down on {{ $labels.instance }}\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ mysqld_pic }}"

      - alert: MysqlTooManyConnections(>80%)
        expr: avg by (instance) (rate(mysql_global_status_threads_connected[1m])) / avg by (instance) (mysql_global_variables_max_connections) * 100 > 80
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}MySQL too many connections (> 80%) (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}More than 80% of MySQL connections are in use on {{ $labels.instance }}\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ mysqld_pic }}"

      - alert: MysqlHighThreadsRunning
        expr: avg by (instance) (rate(mysql_global_status_threads_running[1m])) / avg by (instance) (mysql_global_variables_max_connections) * 100 > 60
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}MySQL high threads running (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}More than 60% of MySQL connections are in running state on {{ $labels.instance }}\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ mysqld_pic }}"

      - alert: MysqlSlaveIoThreadNotRunning
        expr: mysql_slave_status_master_server_id > 0 and ON (instance) mysql_slave_status_slave_io_running == 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}MySQL Slave IO thread not running (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}MySQL Slave IO thread not running on {{ $labels.instance }}\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ mysqld_pic }}"

      - alert: MysqlSlaveSqlThreadNotRunning
        expr: mysql_slave_status_master_server_id > 0 and ON (instance) mysql_slave_status_slave_sql_running == 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}MySQL Slave SQL thread not running (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}MySQL Slave SQL thread not running on {{ $labels.instance }}\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ mysqld_pic }}"

      - alert: MysqlSlaveReplicationLag
        expr: mysql_slave_status_master_server_id > 0 and ON (instance) (mysql_slave_status_seconds_behind_master - mysql_slave_status_sql_delay) > 30
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}MySQL Slave replication lag (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}MySQL replication lag on {{ $labels.instance }}\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ mysqld_pic }}"

      - alert: MysqlSlowQueries
        expr: increase(mysql_global_status_slow_queries[1m]) > 0
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}MySQL slow queries (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}MySQL server mysql has some new slow query.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ mysqld_pic }}"

      - alert: MysqlInnodbLogWaits
        expr: rate(mysql_global_status_innodb_log_waits[15m]) > 10
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}MySQL InnoDB log waits (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}MySQL innodb log writes stalling\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ mysqld_pic }}"

      - alert: MysqlRestarted
        expr: mysql_global_status_uptime < 60
        for: 0m
        labels:
          severity: info
        annotations:
          summary: "{% raw %}MySQL restarted (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}MySQL has just been restarted, less than one minute ago on {{ $labels.instance }}.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ mysqld_pic }}"
### END - MariaDB (prometheus/mysqld_exporter) ###

### BEGIN - Redis (oliver006/redis_exporter) ###
redis_rules:
  - name: redis_rules
    rules:
      - alert: RedisDown
        expr: redis_up == 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Redis down (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Redis instance is down\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ redis_pic }}"

      - alert: RedisMissingMaster
        expr: (count(redis_instance_info{role="master"}) or vector(0)) < 1
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Redis missing master (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Redis cluster has no node marked as master.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ redis_pic }}"

      - alert: RedisTooManyMasters
        expr: count(redis_instance_info{role="master"}) > 1
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Redis too many masters (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Redis cluster has too many nodes marked as master.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ redis_pic }}"

      - alert: RedisDisconnectedSlaves
        expr: count without (instance, job) (redis_connected_slaves) - sum without (instance, job) (redis_connected_slaves) - 1 > 1
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Redis disconnected slaves (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Redis not replicating for all slaves. Consider reviewing the redis replication status.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ redis_pic }}"

      - alert: RedisReplicationBroken
        expr: delta(redis_connected_slaves[1m]) < 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Redis replication broken (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Redis instance lost a slave\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ redis_pic }}"

      - alert: RedisClusterFlapping
        expr: changes(redis_connected_slaves[1m]) > 1
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Redis cluster flapping (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Changes have been detected in Redis replica connection. This can occur when replica nodes lose connection to the master and reconnect (a.k.a flapping).\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ redis_pic }}"

      - alert: RedisMissingBackup
        expr: time() - redis_rdb_last_save_timestamp_seconds > 60 * 60 * 24
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Redis missing backup (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Redis has not been backuped for 24 hours\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ redis_pic }}"

      # The exporter must be started with --include-system-metrics flag or REDIS_EXPORTER_INCL_SYSTEM_METRICS=true environment variable.
      - alert: RedisOutOfSystemMemory
        expr: redis_memory_used_bytes / redis_total_system_memory_bytes * 100 > 90
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Redis out of system memory (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Redis is running out of system memory (> 90%)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ redis_pic }}"

      - alert: RedisOutOfConfiguredMaxmemory
        expr: redis_memory_used_bytes / redis_memory_max_bytes * 100 > 90
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Redis out of configured maxmemory (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Redis is running out of configured maxmemory (> 90%)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ redis_pic }}"

      - alert: RedisTooManyConnections
        expr: redis_connected_clients > 100
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Redis too many connections (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Redis instance has too many connections\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ redis_pic }}"

      - alert: RedisNotEnoughConnections
        expr: redis_connected_clients < 5
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Redis not enough connections (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Redis instance should have more connections (> 5)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ redis_pic }}"

      - alert: RedisRejectedConnections
        expr: increase(redis_rejected_connections_total[1m]) > 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Redis rejected connections (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Some connections to Redis has been rejected\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ redis_pic }}"
### END - Redis (oliver006/redis_exporter) ###

### BEGIN - Kafka (danielqsj/kafka_exporter) ###
kafka_rules:
  - name: kafka_rules
    rules:
      - alert: KafkaTopicsReplicas
        expr: sum(kafka_topic_partition_in_sync_replica) by (topic) < 3
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Kafka topics replicas (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Kafka topic in-sync partition\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ kafka_pic }}"

      - alert: KafkaConsumersGroup
        expr: sum(kafka_consumergroup_lag) by (consumergroup) > 50
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Kafka consumers group (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Kafka consumers group\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ kafka_pic }}"
### END - Kafka (danielqsj/kafka_exporter) ###

### BEGIN - Aerospike (aerospike/aerospike-prometheus-exporter) ###
aerospike_rules:
  - name: aerospike_rules
    rules:
      - alert: ExporterAgentDown
        expr: up{job="aerospike"} == 0
        for: 30s
        labels:
          severity: critical
        annotations:
          description: "{% raw %}{{ $labels.instance }} has been down for more than 30 seconds.{% endraw %}"
          summary: "{% raw %}Node {{ $labels.instance }} down{% endraw %}"
          pic: "{{ aerospike_pic }}"
      - alert: AerospikeNodeDown
        expr: aerospike_node_up{job="aerospike"} == 0
        for: 30s
        labels:
          severity: critical
        annotations:
          description: "{% raw %}{{ $labels.instance }} node is down.{% endraw %}"
          summary: "{% raw %}Node {{ $labels.instance }} down{% endraw %}"
          pic: "{{ aerospike_pic }}"
      - alert: NamespaceStopWrites
        expr: aerospike_namespace_stop_writes{job="aerospike"} == 1
        for: 30s
        labels:
          severity: critical
        annotations:
          description: "{% raw %}Used diskspace for namespace {{ $labels.ns }} in node {{ $labels.instance }} is above stop writes limit.{% endraw %}"
          summary: "{% raw %}Stop Writes for {{ $labels.instance }}/{{ $labels.ns }}{% endraw %}"
          pic: "{{ aerospike_pic }}"
      - alert: NamespaceMemoryCloseToStopWrites
        expr: (aerospike_namespace_stop_writes_pct{job="aerospike"} - (100 - aerospike_namespace_memory_free_pct{job="aerospike"})) <= 10
        for: 30s
        labels:
          severity: warning
        annotations:
          description: "{% raw %}Free memory for namespace {{ $labels.ns }} in node {{ $labels.instance }} is close to stop writes limit.{% endraw %}"
          summary: "{% raw %}Close to stop writes for {{ $labels.instance }}/{{ $labels.ns }} due to memory{% endraw %}"
          pic: "{{ aerospike_pic }}"
      - alert: NamespaceDiskCloseToStopWrites
        expr: (aerospike_namespace_device_available_pct{job="aerospike"} - aerospike_namespace_storage_engine_min_avail_pct{job="aerospike"}) <= 10
        for: 30s
        labels:
          severity: warning
        annotations:
          description: "{% raw %}device_available_pct for namespace {{ $labels.ns }} in node {{ $labels.instance }} is close to min-avail-pct (stop writes) limit.{% endraw %}"
          summary: "{% raw %}Close to stop writes for {{ $labels.instance }}/{{ $labels.ns }} due to device_available_pct{% endraw %}"
          pic: "{{ aerospike_pic }}"
      - alert: NamespacePmemCloseToStopWrites
        expr: (aerospike_namespace_pmem_available_pct{job="aerospike"} - aerospike_namespace_storage_engine_min_avail_pct{job="aerospike"}) <= 10
        for: 30s
        labels:
          severity: warning
        annotations:
          description: "{% raw %}pmem_available_pct for namespace {{ $labels.ns }} in node {{ $labels.instance }} is close to min-avail-pct (stop writes) limit.{% endraw %}"
          summary: "{% raw %}Close to stop writes for {{ $labels.instance }}/{{ $labels.ns }} due to pmem_available_pct{% endraw %}"
          pic: "{{ aerospike_pic }}"
      - alert: ClockSkewStopWrites
        expr: aerospike_namespace_clock_skew_stop_writes{job="aerospike"} == 1
        for: 30s
        labels:
          severity: critical
        annotations:
          description: "{% raw %}Clock has skewed for namespace {{ $labels.ns }} in node {{ $labels.instance }}{% endraw %}"
          summary: "{% raw %}Writes will be stopped by Aerospike{% endraw %}"
          pic: "{{ aerospike_pic }}"
      - alert: ClusterSize
        expr: aerospike_node_stats_cluster_size{job="aerospike"} < 3 # user has to replace 3 here with their desired cluster size.
        for: 30s
        labels:
          severity: critical
        annotations:
          description: "{% raw %}Cluster size mismatch for namespace {{ $labels.ns }} in node {{ $labels.instance }}{% endraw %}"
          summary: "{% raw %}Some of the node(s) has gone out of the cluster{% endraw %}"
          pic: "{{ aerospike_pic }}"
      - alert: DeadPartitions
        expr: aerospike_namespace_dead_partitions{job="aerospike"} > 0
        for: 30s
        labels:
          severity: critical
        annotations:
          description: "{% raw %}Some of the partition(s) for namespace {{ $labels.ns }} in node {{ $labels.instance }} are dead{% endraw %}"
          summary: "{% raw %}Will require the use of the revive command to make them available again{% endraw %}"
          pic: "{{ aerospike_pic }}"
      - alert: HwmBreached
        expr: aerospike_namespace_hwm_breached{job="aerospike"} == 1
        for: 30s
        labels:
          severity: critical
        annotations:
          description: "{% raw %}High water mark has breached for namespace {{ $labels.ns }} in node {{ $labels.instance }}{% endraw %}"
          summary: "{% raw %}Eviction will start to make the space available{% endraw %}"
          pic: "{{ aerospike_pic }}"
      - alert: UnavailablePartitions
        expr: aerospike_namespace_unavailable_partitions{job="aerospike"} > 0
        for: 30s
        labels:
          severity: critical
        annotations:
          description: "{% raw %}Some of the partition(s) is not available for namespace {{ $labels.ns }} in node {{ $labels.instance }}{% endraw %}"
          summary: "{% raw %}Server could not find some partition(s). Check for the network issues and make sure cluster forms properly{% endraw %}"
          pic: "{{ aerospike_pic }}"
      - alert: XDRTimelag
        expr: aerospike_node_stats_xdr_timelag{job="aerospike"} > 10 # (Aerospike 4.9 and older) user can configure the seconds. Refer XDR throttling
        for: 30s
        labels:
          severity: warning
        annotations:
          description: "{% raw %}There seems some lag in XDR for namespace {{ $labels.ns }} in node {{ $labels.instance }}{% endraw %}"
          summary: "{% raw %}Lag can be there in XDR due to network connectivity issues or errors writing at a destination cluster{% endraw %}"
          pic: "{{ aerospike_pic }}"
      - alert: XDRTimelag
        expr: aerospike_xdr_lag{job="aerospike"} > 10 # (Aerospike 5.0 and later) user can configure the seconds. Refer XDR throttling
        for: 30s
        labels:
          severity: warning
        annotations:
          description: "{% raw %}There seems some lag in XDR for namespace {{ $labels.ns }} in node {{ $labels.instance }}{% endraw %}"
          summary: "{% raw %}Lag can be there in XDR due to network connectivity issues or errors writing at a destination cluster{% endraw %}"
          pic: "{{ aerospike_pic }}"
      - alert: ActiveProxies
        expr: (increase(aerospike_namespace_client_proxy_complete{job="aerospike"}[2m]) + increase(aerospike_namespace_client_proxy_timeout{job="aerospike"}[2m]) + increase(aerospike_namespace_client_proxy_error{job="aerospike"}[2m]) + increase(aerospike_namespace_batch_sub_proxy_complete{job="aerospike"}[2m]) + increase(aerospike_namespace_batch_sub_proxy_timeout{job="aerospike"}[2m]) + increase(aerospike_namespace_batch_sub_proxy_error{job="aerospike"}[2m])) > 0
        for: 30s
        labels:
          severity: warning
        annotations:
          description: "{% raw %}Active proxies detected for {{ $labels.ns }} on node {{ $labels.instance }}{% endraw %}"
          summary: "{% raw %}Node is doing proxy. Proxies can happen during cluster change / migrations or if there are any network issues.{% endraw %}"
          pic: "{{ aerospike_pic }}"
### END - Aerospike (aerospike/aerospike-prometheus-exporter) ###

### BEGIN - ElasticSearch (prometheus-community/elasticsearch_exporter) ###
elasticsearch_rules:
  - name: elasticsearch_rules
    rules:
      - alert: ElasticsearchHeapUsageTooHigh
        expr: (elasticsearch_jvm_memory_used_bytes{area="heap"} / elasticsearch_jvm_memory_max_bytes{area="heap"}) * 100 > 90
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Elasticsearch Heap Usage Too High (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}The heap usage is over 90%\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ elasticsearch_pic }}"

      - alert: ElasticsearchHeapUsageWarning
        expr: (elasticsearch_jvm_memory_used_bytes{area="heap"} / elasticsearch_jvm_memory_max_bytes{area="heap"}) * 100 > 80
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Elasticsearch Heap Usage warning (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}The heap usage is over 80%\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ elasticsearch_pic }}"

      - alert: ElasticsearchDiskOutOfSpace
        expr: elasticsearch_filesystem_data_available_bytes / elasticsearch_filesystem_data_size_bytes * 100 < 10
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Elasticsearch disk out of space (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}The disk usage is over 90%\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ elasticsearch_pic }}"

      - alert: ElasticsearchDiskSpaceLow
        expr: elasticsearch_filesystem_data_available_bytes / elasticsearch_filesystem_data_size_bytes * 100 < 20
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Elasticsearch disk space low (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}The disk usage is over 80%\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ elasticsearch_pic }}"

      - alert: ElasticsearchClusterRed
        expr: elasticsearch_cluster_health_status{color="red"} == 1
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Elasticsearch Cluster Red (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Elastic Cluster Red status\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ elasticsearch_pic }}"

      - alert: ElasticsearchClusterYellow
        expr: elasticsearch_cluster_health_status{color="yellow"} == 1
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Elasticsearch Cluster Yellow (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Elastic Cluster Yellow status\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ elasticsearch_pic }}"

      - alert: ElasticsearchHealthyNodes
        expr: elasticsearch_cluster_health_number_of_nodes < 3
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Elasticsearch Healthy Nodes (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Missing node in Elasticsearch cluster\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ elasticsearch_pic }}"

      - alert: ElasticsearchHealthyDataNodes
        expr: elasticsearch_cluster_health_number_of_data_nodes < 3
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Elasticsearch Healthy Data Nodes (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Missing data node in Elasticsearch cluster\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ elasticsearch_pic }}"

      - alert: ElasticsearchRelocatingShards
        expr: elasticsearch_cluster_health_relocating_shards > 0
        for: 0m
        labels:
          severity: info
        annotations:
          summary: "{% raw %}Elasticsearch relocating shards (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Elasticsearch is relocating shards\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ elasticsearch_pic }}"

      - alert: ElasticsearchRelocatingShardsTooLong
        expr: elasticsearch_cluster_health_relocating_shards > 0
        for: 15m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Elasticsearch relocating shards too long (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Elasticsearch has been relocating shards for 15min\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ elasticsearch_pic }}"

      - alert: ElasticsearchInitializingShards
        expr: elasticsearch_cluster_health_initializing_shards > 0
        for: 0m
        labels:
          severity: info
        annotations:
          summary: "{% raw %}Elasticsearch initializing shards (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Elasticsearch is initializing shards\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ elasticsearch_pic }}"

      - alert: ElasticsearchInitializingShardsTooLong
        expr: elasticsearch_cluster_health_initializing_shards > 0
        for: 15m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Elasticsearch initializing shards too long (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Elasticsearch has been initializing shards for 15 min\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ elasticsearch_pic }}"

      - alert: ElasticsearchUnassignedShards
        expr: elasticsearch_cluster_health_unassigned_shards > 0
        for: 0m
        labels:
          severity: critical
        annotations:
          summary: "{% raw %}Elasticsearch unassigned shards (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Elasticsearch has unassigned shards\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ elasticsearch_pic }}"

      - alert: ElasticsearchPendingTasks
        expr: elasticsearch_cluster_health_number_of_pending_tasks > 0
        for: 15m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Elasticsearch pending tasks (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}Elasticsearch has pending tasks. Cluster works slowly.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ elasticsearch_pic }}"

      - alert: ElasticsearchNoNewDocuments
        expr: increase(elasticsearch_indices_docs{es_data_node="true"}[10m]) < 1
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: "{% raw %}Elasticsearch no new documents (instance {{ $labels.instance }}){% endraw %}"
          description: "{% raw %}No new documents for 10 min!\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}{% endraw %}"
          pic: "{{ elasticsearch_pic }}"
### END - ElasticSearch (prometheus-community/elasticsearch_exporter) ###
